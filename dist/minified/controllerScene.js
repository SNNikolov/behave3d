"use strict";Behave3d.controllerScene=function(a){Behave3d.Controller.call(this,a)};Behave3d.controllerScene.prototype=Object.create(Behave3d.Controller.prototype);Behave3d.controllerScene.prototype.events=["viewport_update"];Behave3d.controllerScene.prototype.messages=["params"];Behave3d.controllerScene.prototype.default_params={perspective:"100%v",perspective_origin_x:50,perspective_origin_y:50,update_perspective:!0};Behave3d.controllerScene.prototype.construct=function(a,b){if(b=="params"){this.needUpdate=!1;this.windowScrollListener=this.windowScrollListener.bind(this);Behave3d.setScene(Behave3d.params.extendObject(this.default_params,a),this);this.updateViewport()}else if(b=="events"){if(this.update_perspective){window.addEventListener("scroll",this.windowScrollListener,!0);window.addEventListener("resize",this.windowScrollListener,!0)}}};Behave3d.controllerScene.prototype.message=function(a,b){if(this.handleCommonMessage(a,b))return this;b=this.setMessageParams(a,b);if(a=="params"){Behave3d.setScene(b,this);this.updateViewport()}return this};Behave3d.controllerScene.prototype.update=function(){if(!this.paused&&this.needUpdate)this.updateViewport()};Behave3d.controllerScene.prototype.windowScrollListener=function(){this.needUpdate=!0};Behave3d.controllerScene.prototype.updateViewport=function(){var a=5;if(!this.update_perspective)return;var b={x:this.owner.element.clientLeft,y:this.owner.element.clientTop,w:this.owner.element.clientWidth,h:this.owner.element.clientHeight},c={x:window.pageXOffset-b.x,y:window.pageYOffset-b.y,w:window.innerWidth,h:window.innerHeight};this.perspective_origin_x=c.x+c.w/2;this.perspective_origin_y=c.y+c.h/2;this.perspective_origin_x=(this.perspective_origin_x/b.w*100).toFixed(a);this.perspective_origin_y=(this.perspective_origin_y/b.h*100).toFixed(a);Behave3d.setScene({perspective_origin_x:this.perspective_origin_x,perspective_origin_y:this.perspective_origin_y},this);this.fireEvent("viewport_update");this.needUpdate=!1;Behave3d.debugOut(this.debugName()+" sets perspectiveOrigin='"+this.perspective_origin_x+"% "+this.perspective_origin_y+"%', perspective="+Behave3d.vars.sceneParams.perspective+" for viewport(x: "+c.x+", y: "+c.y+", w: "+c.w+", h: "+c.h+")")};Behave3d.registerController("scene",Behave3d.controllerScene);