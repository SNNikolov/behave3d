"use strict";Behave3d.controllerListButton=function(a){Behave3d.Controller.call(this,a)};Behave3d.controllerListButton.prototype=Object.create(Behave3d.Controller.prototype);Behave3d.controllerListButton.prototype.requires={controllers:["controllerList","controllerMove","controllerOpacity"]};Behave3d.controllerListButton.prototype.messages=["update","click"];Behave3d.controllerListButton.prototype.events=["click","border_reached","border_left","no_progress"];Behave3d.controllerListButton.prototype.default_params={list:"",action:"",action_pos:-1,action_step:0,when_no_progress:"fire",when_on_border:"fire",when_clicked:"fire",back_delay:200,alt_class:""};Behave3d.controllerListButton.prototype.construct=function(a,b){if(b=="params"){this.handlers_set_for_list=""}else if(b=="events"){this.setEventHandlers()}};Behave3d.controllerListButton.prototype.destruct=()=>{};Behave3d.controllerListButton.prototype.message=function(a,b){if(this.handleCommonMessage(a,b))return this;b=this.setMessageParams(a,b);if(a=="update"){if(!this.list)Behave3d.debugExist(this.debugName()+" cannot update because its property 'list' is not set");this.setEventHandlers()}else if(a=="click"){if(this.action){var c={};if(this.action_pos!=-1)c.pos=this.action_pos;if(this.action_step!=0)c.step=this.action_step;this.list_ref.message(this.action,c)}this.doReaction(this.when_clicked,"click")}return this};Behave3d.controllerListButton.prototype.setEventHandlers=function(){if(this.list!=this.handlers_set_for_list){this.on(this.list+" all",this.handlerOfListEvents.bind(this));this.handlers_set_for_list=this.list;this.list_ref=this.getAnotherController(this.list)}if(!this.targets_events_handled){this.targets_events_handled=!0;var a=this;for(var i=0;i<this.targets.length;i++){this.targets[i].addEventListener("click",()=>{a.message("click")})}}};Behave3d.controllerListButton.prototype.doReaction=function(a,b,c){if(!a)return;if(!c&&a!="fire"&&["click","no_prev","no_next"].indexOf(b)>=0)setTimeout(function(){this.doReaction(a,!0,b)}.bind(this),this.back_delay);var d=a.trim().split(" ");for(var i=0;i<d.length;i++){switch(d[i]){case"change_class":if(this.alt_class){if(c)this.owner.element.classList.remove(this.alt_class);else this.owner.element.classList.add(this.alt_class)}else Behave3d.debugExit(this.debugName()+" must perform 'change_class' but its param alt_class is not set");break;case"disable":this.owner.element.disabled=!c;break;case"fire":if(!c||b=="border_left")this.fireEvent(b);break;}}};Behave3d.controllerListButton.prototype.handlerOfListEvents=function(a,b){var c="",d=!1;switch(a){case"first_reached":if(this.action!="focus_next")this.doReaction(this.when_on_border,"border_reached");break;case"last_reached":if(this.action!="focus_prev")this.doReaction(this.when_on_border,"border_reached");break;case"border_left":this.doReaction(this.when_on_border,"border_left",!0);break;case"no_prev":case"no_next":if(this.action!=(a=="no_prev"?"focus_next":"focus_prev"))this.doReaction(this.when_no_progress,"no_progress");break;}};Behave3d.registerController("listButton",Behave3d.controllerListButton);