"use strict";Behave3d.controllerScene=function(e){Behave3d.Controller.call(this,e)},Behave3d.controllerScene.prototype=Object.create(Behave3d.Controller.prototype),Behave3d.controllerScene.prototype.events=["viewport_update"],Behave3d.controllerScene.prototype.messages=["params"],Behave3d.controllerScene.prototype.default_params={perspective:"100%v",perspective_origin_x:50,perspective_origin_y:50,update_perspective:!0},Behave3d.controllerScene.prototype.construct=function(e,t){"params"==t?(this.needUpdate=!1,this.windowScrollListener=this.windowScrollListener.bind(this),Behave3d.setScene(Behave3d.params.extendObject(this.default_params,e),this),this.updateViewport()):"events"==t&&this.update_perspective&&(window.addEventListener("scroll",this.windowScrollListener,!0),window.addEventListener("resize",this.windowScrollListener,!0))},Behave3d.controllerScene.prototype.message=function(e,t){return this.handleCommonMessage(e,t)?this:(t=this.setMessageParams(e,t),"params"==e&&(Behave3d.setScene(t,this),this.updateViewport()),this)},Behave3d.controllerScene.prototype.update=function(){!this.paused&&this.needUpdate&&this.updateViewport()},Behave3d.controllerScene.prototype.windowScrollListener=function(){this.needUpdate=!0},Behave3d.controllerScene.prototype.updateViewport=function(){var e=5;if(this.update_perspective){var t={x:this.owner.element.clientLeft,y:this.owner.element.clientTop,w:this.owner.element.clientWidth,h:this.owner.element.clientHeight},i={x:window.pageXOffset-t.x,y:window.pageYOffset-t.y,w:window.innerWidth,h:window.innerHeight};this.perspective_origin_x=i.x+i.w/2,this.perspective_origin_y=i.y+i.h/2,this.perspective_origin_x=(this.perspective_origin_x/t.w*100).toFixed(e),this.perspective_origin_y=(this.perspective_origin_y/t.h*100).toFixed(e),Behave3d.setScene({perspective_origin_x:this.perspective_origin_x,perspective_origin_y:this.perspective_origin_y},this),this.fireEvent("viewport_update"),this.needUpdate=!1,Behave3d.debugOut(this.debugName()+" sets perspectiveOrigin='"+this.perspective_origin_x+"% "+this.perspective_origin_y+"%', perspective="+Behave3d.vars.sceneParams.perspective+" for viewport(x: "+i.x+", y: "+i.y+", w: "+i.w+", h: "+i.h+")")}},Behave3d.registerController("scene",Behave3d.controllerScene);